job-scraper-app/
├── job_scraper_app.py          # main Streamlit file
├── scraping/
│   ├── __init__.py
│   ├── indeed_selenium.py      # Option 2
│   ├── remoteok_bs4.py         # Option 1
│   ├── careerjet_api.py        # Option 3
├── assets/
│   └── Chris_Vitale_Resume_March_2025.pdf
├── apply_log.csv               # generated automatically
├── requirements.txt
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
import time
import pandas as pd

def scrape_indeed(keyword, location, max_results=10):
    options = Options()
    options.add_argument("--headless")
    driver = webdriver.Chrome(options=options)

    url = f"https://www.indeed.com/jobs?q={keyword}&l={location}&remotejob=1"
    driver.get(url)
    time.sleep(2)

    jobs = []
    cards = driver.find_elements(By.CLASS_NAME, 'result')
    for card in cards[:max_results]:
        try:
            title = card.find_element(By.CLASS_NAME, 'jobTitle').text
            company = card.find_element(By.CLASS_NAME, 'companyName').text
            loc = card.find_element(By.CLASS_NAME, 'companyLocation').text
            link = card.find_element(By.TAG_NAME, 'a').get_attribute('href')
            jobs.append({
                "Job Title": title,
                "Company": company,
                "Location": loc,
                "Link": link
            })
        except Exception:
            continue

    driver.quit()
    return pd.DataFrame(jobs)
import requests
from bs4 import BeautifulSoup
import pandas as pd

def scrape_remoteok(keyword):
    response = requests.get("https://remoteok.io/remote-finance-jobs")
    soup = BeautifulSoup(response.text, 'html.parser')

    jobs = []
    for row in soup.select("tr.job"):
        if keyword.lower() in row.text.lower():
            try:
                title = row.select_one("h2").text
                company = row.select_one(".companyLink span").text
                location = "Remote"
                link = "https://remoteok.io" + row.get("data-href")
                jobs.append({
                    "Job Title": title,
                    "Company": company,
                    "Location": location,
                    "Link": link
                })
            except:
                continue
    return pd.DataFrame(jobs)
import requests
import
